@page "/{Id:int}"
@inject HttpClient Http
@inject IJSRuntime JsRuntime;
@using System.Net.Http


@if (editGuest == null)
{
    <p>Guests Not found.</p>
}
else
{
    <h4>Guest Information</h4>
    <EditForm Model="@editGuest" >
    <DataAnnotationsValidator />
    <ValidationSummary />
    <form>
        <div class="form-group  col-md-6">
            <label for="name">Name</label>
            <InputText id="name" class="form-control" @bind-Value="editGuest.Name" />
        </div>
        <div class="form-group  col-md-6">
            <label for="Tel">Tel</label>
            <InputText id="Tel" class="form-control" @bind-Value="editGuest.Tel" />
        </div>
        <div class="form-group  col-md-6">
            <label for="Address">Address</label>
            <InputText id="Address" class="form-control" @bind-Value="editGuest.Address" />
        </div>
        <div class="form-group  col-md-6">
            <label for="Mail">Mail</label>
            <InputText id="Mail" class="form-control" @bind-Value="editGuest.Mail" />
        </div>
    </form>

    <button class="btn btn-primary" type="submit" @onclick="SaveItem">Submit</button>
    @Message
    </EditForm>
}

@code {

    [Parameter]
    public Int32 Id { get; set; }
    private String Message = "";
    private Guest editGuest = new Guest();
    protected override async Task OnInitializedAsync() => editGuest = await Http.GetFromJsonAsync<Guest>("api/Guest/" + Id.ToString());
       
    private async Task SaveItem()
    {
       Message = "Update Completed";
    }
    
    public class Guest
    {
        public int id {get;set;}
        public string Name {get;set;}
        public string Tel {get;set;}
        public string Address {get;set;}
        public string Mail {get;set;}
    }
}